<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sweetmeat]]></title>
  <link href="http://sweetme.at/atom.xml" rel="self"/>
  <link href="http://sweetme.at/"/>
  <updated>2013-09-13T10:26:28-04:00</updated>
  <id>http://sweetme.at/</id>
  <author>
    <name><![CDATA[Chris Simpkins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Logs with Color and Graphs]]></title>
    <link href="http://sweetme.at/2013/09/13/git-logs-with-color/"/>
    <updated>2013-09-13T09:44:00-04:00</updated>
    <id>http://sweetme.at/2013/09/13/git-logs-with-color</id>
    <content type="html"><![CDATA[<p>Want to add some color to your Git log?  Check out this git log configuration that gives you one commit per line, a commit graph, abbreviated commit ID&rsquo;s, relative dates, &amp; commit author all bundled up in color coordinated text.</p>

<!--More-->


<h2>Git Logs with Graphs and Color</h2>

<p>Navigate to your git initialized directory (that includes previous commits) and use this command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --date=relative</span></code></pre></td></tr></table></div></figure>


<p><small>Source: <a href="https://twitter.com/twittmonkey">Patryk Małek</a> in comments on <a href="https://coderwall.com/p/euwpig">this Coderwall post</a> by <a href="https://twitter.com/filipekiss">Filipe Kiss</a></small></p>

<p>and your output will look like this:
<img src="http://sweetme.at/images/git-log-color-com.png" alt="image" /></p>

<h2>Conserve ATP, Make a Git Alias</h2>

<p>Save yourself keystrokes by creating a git alias so that you can open your colorful new log style as if you were using any built-in git command.</p>

<h3>Method 1</h3>

<p>Filipe and Patryk demonstrate how to configure the git alias &ldquo;lg&rdquo; in the thread.  For the above command, it looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global alias.lg "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --date=relative"</span></code></pre></td></tr></table></div></figure>


<p>Make sure that you keep that <code>--global</code> switch if you want this included as part of your global git configuration.</p>

<p>To change the alias name, modify the <code>alias.lg</code> string with the alias that you&rsquo;d like to use.  For example, to call it purtylog you would change it to <code>alias.purtylog</code>.</p>

<h3>Method 2</h3>

<p>Alternatively, you can add your new alias to your <code>~/gitconfig</code> file.  Open the file in an editor and (if you have not already done so) add an <code>[alias]</code> section to the file with the following alias definition for lg:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[alias]
</span><span class='line'>    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --date=relative</span></code></pre></td></tr></table></div></figure>


<h2>Use It</h2>

<p>With both methods, you then view your new log style with the following command (using your new alias):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git lg</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Maximize PNG Image Compression with OptiPNG]]></title>
    <link href="http://sweetme.at/2013/09/11/how-to-maximize-png-image-compression-with-optipng/"/>
    <updated>2013-09-11T23:11:00-04:00</updated>
    <id>http://sweetme.at/2013/09/11/how-to-maximize-png-image-compression-with-optipng</id>
    <content type="html"><![CDATA[<p>OptiPNG is an open source, lossless PNG file compression application that performs well on compression testing.  Here&rsquo;s how you maximize your compression ratios with it.</p>

<!--More-->


<h2>Install</h2>

<p>OptiPNG is an open source application that is <a href="http://optipng.sourceforge.net/">available on SourceForge</a>.  Documentation in a pdf format is available <a href="http://optipng.sourceforge.net/optipng-0.7.4.man.pdf">here</a>.</p>

<p>On *nix systems, you can build and install it with the standard set of autotools commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./configure
</span><span class='line'>make && sudo make install</span></code></pre></td></tr></table></div></figure>


<p>Windows users get an .exe binary in the zip archive on the download page.</p>

<h2>PNG Compression with OptiPNG</h2>

<p>I have been testing a few lossless PNG compression applications with PNG files that I generated from both Photoshop CS6 and Pixelmator.  These included files ranging from 1.2 kB to 1.5 MB that were saved in each application&rsquo;s default RGB + alpha 8 bit format, as well as in the Photoshop &ldquo;Save for web&rdquo; compressed format.  Generally speaking, the best compression / time command based upon my testing on a MacBook Pro (2.4 GHz Intel Core i7, 8GB RAM) is:</p>

<h3>Near Maximal Compression + Fast</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>optipng -o2 -strip all &lt;image.png&gt;</span></code></pre></td></tr></table></div></figure>


<p>This command strips all meta data and compresses the image data.  It led to a 18% decrease in the default Pixelmator PNG size and a 95% decrease in the default Photoshop PNG size.</p>

<p>If you want to maximize your compression ratio with a fairly significant time tradeoff at larger file sizes, you can use the <code>-o7</code> switch.</p>

<h3>Maximal Compression + Not So Fast (for Large File Sizes)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>optipng -o7 -strip all &lt;image.png&gt;</span></code></pre></td></tr></table></div></figure>


<p>In the files that I tested, this led to a modest ~1 percentage point gain, though your results may vary depending upon the complexity of your image.</p>

<p>The Photoshop CS6 &ldquo;Save for web&rdquo; PNG-8 compression format with 256 colors, bicubic sampling, no metadata, &amp; diffusion dither resulted in a file that had near maximal compression by current standards.  On a 100x100 pixel image, I was only able to wring out another 2.4% of the original file size with the latter optipng command.</p>

<h2>File Size by OptiPNG Switch</h2>

<p>Here are the data for the default 100x100px Photoshop PNG file.
<img src="http://sweetme.at/images/optipng-compression-tests.png" alt="image" /></p>

<h2>Learn More About PNG Compression</h2>

<p>Want more background?  <a href="http://optipng.sourceforge.net/pngtech/optipng.html">This guide by Cosmin Truţa</a> is a good resource.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Turn Your Browser into a Text Editor with Syntax Highlighting]]></title>
    <link href="http://sweetme.at/2013/09/10/how-to-turn-your-browser-into-a-text-editor-with-syntax-highlighting/"/>
    <updated>2013-09-10T19:31:00-04:00</updated>
    <id>http://sweetme.at/2013/09/10/how-to-turn-your-browser-into-a-text-editor-with-syntax-highlighting</id>
    <content type="html"><![CDATA[<p>Pop this script into your browser&rsquo;s navigation bar and code away in the browser with syntax highlighting for multiple languages.</p>

<!--More-->


<h2>Script</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>data:text/html, <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span><span class="nc">.e</span><span class="p">{</span><span class="k">position</span><span class="o">:</span><span class="k">absolute</span><span class="p">;</span><span class="k">top</span><span class="o">:</span><span class="m">0</span><span class="p">;</span><span class="k">right</span><span class="o">:</span><span class="m">0</span><span class="p">;</span><span class="k">bottom</span><span class="o">:</span><span class="m">0</span><span class="p">;</span><span class="k">left</span><span class="o">:</span><span class="m">0</span><span class="p">;}</span><span class="nt">&lt;/style&gt;&lt;div</span> <span class="na">class=</span><span class="s">&quot;e&quot;</span> <span class="na">id=</span><span class="s">&quot;editor&quot;</span><span class="nt">&gt;&lt;/div&gt;&lt;script </span><span class="na">src=</span><span class="s">&quot;http://d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;&lt;script&gt;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">ace</span><span class="p">.</span><span class="nx">edit</span><span class="p">(</span><span class="s2">&quot;editor&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">setTheme</span><span class="p">(</span><span class="s2">&quot;ace/theme/textmate&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">getSession</span><span class="p">().</span><span class="nx">setMode</span><span class="p">(</span><span class="s2">&quot;ace/mode/python&quot;</span><span class="p">);</span><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><small>Source: <a href="https://gist.github.com/jdkanani/4670615">jdkanani Gist on GitHub</a> with language + theme modifications</small></p>

<h2>Instructions</h2>

<p>Copy the script above, paste it into your browser navigation bar, and hit Enter/Return.  Through the power of <a href="http://ace.c9.io/">Ace</a>, your browser will turn into a text editor with automatic line numbers, code folding, and syntax highlighting (in this case for Python).</p>

<h2>Browser Screenshot with a Python Script</h2>

<p><img src="http://sweetme.at/images/ace_browser_editor.png" alt="image" /></p>

<h2>Customize Your Language</h2>

<p>Ace supports over 60 languages.  To change the syntax highlighter in the script, modify the line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">e</span><span class="p">.</span><span class="nx">getSession</span><span class="p">().</span><span class="nx">setMode</span><span class="p">(</span><span class="s2">&quot;ace/mode/python&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>with the language mode that you&rsquo;d like to use.  You can <a href="https://github.com/ajaxorg/ace/tree/master/lib/ace/mode">find the list of supported language modes in the GitHub repository</a>.  Here is how you specify the JavaScript syntax highlighter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">e</span><span class="p">.</span><span class="nx">getSession</span><span class="p">().</span><span class="nx">setMode</span><span class="p">(</span><span class="s2">&quot;ace/mode/javascript&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Customize Your Editor Theme</h2>

<p>The Ace editor supports over 20 different text editor themes too.  To change the editor theme, modify the line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">e</span><span class="p">.</span><span class="nx">setTheme</span><span class="p">(</span><span class="s2">&quot;ace/theme/textmate&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>with <a href="https://github.com/ajaxorg/ace/tree/master/lib/ace/theme">any of the supported themes</a>.  Here is how you switch to Monokai:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">e</span><span class="p">.</span><span class="nx">setTheme</span><span class="p">(</span><span class="s2">&quot;ace/theme/monokai&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>^5</h2>

<p>Kudos to <a href="https://gist.github.com/jdkanani/4670615">jdkanani</a> for this script.  Head over to his repository and show him some love if you use it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swizzle, a Markdown Text Editor Theme for Mou and LightPaper]]></title>
    <link href="http://sweetme.at/2013/09/09/swizzle-a-markdown-text-editor-theme/"/>
    <updated>2013-09-09T22:13:00-04:00</updated>
    <id>http://sweetme.at/2013/09/09/swizzle-a-markdown-text-editor-theme</id>
    <content type="html"><![CDATA[<p>Swizzle is a dark Markdown theme that I released on GitHub for the <a href="http://mouapp.com/">Mou</a> and <a href="http://clockworkengine.com/lightpaper-mac/">LightPaper</a> text editors.</p>

<!--More-->


<h2>Demo</h2>

<p><img src="https://raw.github.com/chrissimpkins/swizzle/master/img/swizzle_demo.png" alt="Swizzle Demo" /></p>

<h2>Download</h2>

<p>Swizzle is available on <a href="https://github.com/chrissimpkins/swizzle">GitHub</a> <i class="icon-github"></i></p>

<p>You can clone it with this URL:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://github.com/chrissimpkins/swizzle.git</span></code></pre></td></tr></table></div></figure>


<h2>Install</h2>

<p>Place the <code>Swizzle.txt</code> file in your application Themes directory.</p>

<p><strong>Mou Themes</strong> : <code>~/Library/Application Support/Mou/Themes</code></p>

<p><strong>LightPaper Themes</strong> : <code>~/.lightpaper/Themes</code></p>

<p>Open your Markdown editor, open the Preferences pane, &amp; select the Swizzle theme in the dropdown for the text editor themes (not the preview themes!).</p>

<h2>Specs</h2>

<p><strong>Fonts</strong>: Helvetica Neue, Helvetica, &amp; Menlo</p>

<p><strong>Palette</strong>: <a href="http://www.colourlovers.com/palette/444487/Curiosity_Killed">Curiosity Killed</a> with a few additions {^5 Miaka}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Read RSS Feeds in Your Terminal on Linux and Mac OSX]]></title>
    <link href="http://sweetme.at/2013/09/05/read-rss-feeds-in-your-terminal/"/>
    <updated>2013-09-05T15:01:00-04:00</updated>
    <id>http://sweetme.at/2013/09/05/read-rss-feeds-in-your-terminal</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s a one liner that allows you to read RSS feed titles in your terminal window.</p>

<!--More-->


<h2>cURL + grep + sed = Terminal RSS Feeds</h2>

<p>Here is the the generic command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl "THE_RSS_FEED"  2&gt;/dev/null | grep "&lt;title&gt;" | sed -e "s/.*\&lt;title\&gt;\(.*\)\&lt;\/title\&gt;.*/»\ \1/g" | less</span></code></pre></td></tr></table></div></figure>


<p>Replace <code>THE_RSS_FEED</code> with the URL of the syndicated site feed (surrounded by the double quotes) and confirm that the raw feed XML displays item titles with a plain &lt;title&gt; tag (i.e. without CDATA tags or other XML detritus).</p>

<p>If you&rsquo;d like to prepend a different list symbol for the titles, replace the <code>»</code> character with another ascii symbol or symbols.</p>

<p>I have been playing around with this using the <a href="http://chrissimpkins.github.io/tweetledee/">Tweetledee</a> files to view Twitter search, favorites, list, and user timeline feeds.  The formatting for up to 140 chars could use a bit of work but it is functional.</p>

<h2>Do it Without less</h2>

<p>The command uses the less shell command to create paginated formatting.  If you prefer not to use this, just remove the last pipe (|) and the less command at the end of the command string.</p>

<p><small>Source: I made slight modifications to the shell command posted by <a href="http://www.commandlinefu.com/commands/view/12671/extract-xml-rss-etc-by-tags-such-as-or-or-">c3w on commandlinefu.com</a></small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Mute the Standard Output Stream in a Bash Shell Command]]></title>
    <link href="http://sweetme.at/2013/09/04/how-to-mute-the-standard-output-stream-in-a-bash-shell-command/"/>
    <updated>2013-09-04T23:46:00-04:00</updated>
    <id>http://sweetme.at/2013/09/04/how-to-mute-the-standard-output-stream-in-a-bash-shell-command</id>
    <content type="html"><![CDATA[<p>Did the developer forget a verbosity switch?  Here is the solution.</p>

<!--More-->


<h2>Mute a Bash Command</h2>

<p>Append the following bash idiom to your command and you will have silence:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&-</span></code></pre></td></tr></table></div></figure>


<p>&lt;crickets&gt;</p>

<p><small>Source: <a href="http://stackoverflow.com/questions/2292847/how-to-silent-output-in-a-bash-script">Eduardo Cuomo on SO</a></small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Open a File in Sublime Text 2 or 3 from the Command Line on Mac OSX]]></title>
    <link href="http://sweetme.at/2013/09/03/how-to-open-a-file-in-sublime-text-2-or-3-from-the-command-line-on-mac-osx/"/>
    <updated>2013-09-03T08:15:00-04:00</updated>
    <id>http://sweetme.at/2013/09/03/how-to-open-a-file-in-sublime-text-2-or-3-from-the-command-line-on-mac-osx</id>
    <content type="html"><![CDATA[<p>You can open a file in <a href="http://www.sublimetext.com/">Sublime Text</a> from the Mac command line.  Here is how you do it with versions 2 and 3 of this popular text editor.</p>

<!--More-->


<h2>Sublime Text 2</h2>

<p>Create a symbolic link to the subl binary with this command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl</span></code></pre></td></tr></table></div></figure>


<h2>Sublime Text 3</h2>

<p>The install path is different in Sublime Text 3.  Create the symbolic link like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl</span></code></pre></td></tr></table></div></figure>


<h2>Confirm that it Works</h2>

<p>Confirm that it works by accessing the help file with the <code>--help</code> switch:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>subl --help</span></code></pre></td></tr></table></div></figure>


<p>If you receive an error, make sure that <code>/usr/local/bin</code> is on your PATH.</p>

<h2>Use it on the Command Line</h2>

<p>Use the filename as the argument to subl.  If there are spaces in the filename path, make sure that you surround the entire path with double quotes or escape the spaces.</p>

<p>Here is an example with the file &lsquo;test.txt&rsquo;:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>subl test.txt</span></code></pre></td></tr></table></div></figure>


<h2>Documentation</h2>

<p>Here are links to the <a href="">Sublime Text 2</a> and <a href="http://www.sublimetext.com/docs/3/osx_command_line.html">Sublime Text 3</a> command line use documentation if you&rsquo;d like to learn more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Open a URL in the Default Browser Across OS Platforms]]></title>
    <link href="http://sweetme.at/2013/09/02/how-to-open-a-url-in-the-default-browser-across-os-platforms/"/>
    <updated>2013-09-02T14:39:00-04:00</updated>
    <id>http://sweetme.at/2013/09/02/how-to-open-a-url-in-the-default-browser-across-os-platforms</id>
    <content type="html"><![CDATA[<p>Programmatically launching a URL in the default browser across OS platforms is not as widely supported as you might think.  The Python webbrowser module provides fairly broad support for this.  Here&rsquo;s a shell one-liner and a Python script that allow you to do it.</p>

<!--More-->


<h2>Shell Command</h2>

<p>You can run this as a one liner in your shell with the following syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -m webbrowser &lt;URL&gt;</span></code></pre></td></tr></table></div></figure>


<p>To open the URL in a new tab, use the <code>-t</code> switch, and to open it in a new browser window, use the <code>-n</code> switch like this:</p>

<h3>Open Sweetmeat in a New Tab</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -m webbrowser -t "http://sweetme.at"</span></code></pre></td></tr></table></div></figure>


<h3>Open Sweetmeat in a New Window</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -m webbrowser -n "http://sweetme.at"</span></code></pre></td></tr></table></div></figure>


<h2>Python Scripts</h2>

<p>Import the webbrowser module and use the following module function:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">webbrowser</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://sweetme.at&quot;</span>
</span><span class='line'><span class="n">webbrowser</span><span class="o">.</span><span class="n">open_new_tab</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This opens the URL in a new tab with a fallback to a new browser window if this fails.  To make a new window the default, use the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">webbrowser</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://sweetme.at&quot;</span>
</span><span class='line'><span class="n">webbrowser</span><span class="o">.</span><span class="n">open_new</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python Docs</h2>

<p>Here are the webbrowser module docs for Python versions <a href="http://docs.python.org/2.7/library/webbrowser.html">2.7</a> and <a href="http://docs.python.org/3.3/library/webbrowser.html">3.3</a>. There are a few more examples and details on possible exceptions that are raised with these scripts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Special Characters in Your Shell]]></title>
    <link href="http://sweetme.at/2013/08/30/special-characters-in-your-shell/"/>
    <updated>2013-08-30T17:21:00-04:00</updated>
    <id>http://sweetme.at/2013/08/30/special-characters-in-your-shell</id>
    <content type="html"><![CDATA[<p>All of these characters have special functions in the shell and need to be escaped with a backslash <code>\&amp;</code> or surrounded with single quotation marks <code>'&amp;'</code> if you intend to use the character itself, rather than the shell-specific meaning, on the command line.  Here is the list:</p>

<!--More-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* ? & ! ~ $ ; | ' " ` ( ) [ ] &lt; &gt; { } \ / </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Determine if a Directory Has Been Initialized with Git]]></title>
    <link href="http://sweetme.at/2013/08/29/how-to-determine-if-a-directory-has-been-initialized-with-git/"/>
    <updated>2013-08-29T23:56:00-04:00</updated>
    <id>http://sweetme.at/2013/08/29/how-to-determine-if-a-directory-has-been-initialized-with-git</id>
    <content type="html"><![CDATA[<p>Has <code>git init</code> been run on the directory?  Here&rsquo;s how you find out.</p>

<!--More-->


<p>Git initialization of an existing directory with the command <code>git init</code> results in a subdirectory that is named <code>.git</code>.  It contains your git goodies.  To determine whether the directory has been git initialized, simply check for the presence of the <code>.git</code> subdirectory.  Here&rsquo;s how to do it with C or C++:</p>

<figure class='code'><figcaption><span>Git or No Git?</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;sys/stat.h&gt;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">stat</span> <span class="n">sb</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pathname</span> <span class="o">=</span> <span class="s">&quot;.git&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">stat</span><span class="p">(</span><span class="n">pathname</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">sb</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">S_ISDIR</span><span class="p">(</span><span class="n">sb</span><span class="p">.</span><span class="n">st_mode</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// .git directory is present so initialization has occurred, do git stuff in this block</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// .git initialization has not occurred, handle that here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Directory Exists in Other Languages</h2>

<p>Trying to do this in another language?  A quick search for &ldquo;directory exists&rdquo; in your language du jour generally leads to the information that you need.</p>

<p>Here is how you determine whether a directory exists in <a href="http://stackoverflow.com/questions/6940394/how-to-use-javascript-to-determine-whether-a-directory-exists">JavaScript</a>, <a href="http://php.net/manual/en/function.file-exists.php">PHP</a>, <a href="http://docs.python.org/2/library/os.path.html#os.path.exists">Python</a>, and <a href="http://stackoverflow.com/questions/1085218/how-to-check-if-a-given-directory-exists-in-ruby">Ruby</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple Local HTTP Server with Ruby]]></title>
    <link href="http://sweetme.at/2013/08/28/simple-local-http-server-with-ruby/"/>
    <updated>2013-08-28T15:12:00-04:00</updated>
    <id>http://sweetme.at/2013/08/28/simple-local-http-server-with-ruby</id>
    <content type="html"><![CDATA[<p><a href="http://sweetme.at/2013/08/21/simple-local-http-server-with-python/">You can do it with Python</a>.  And you can do it with Ruby.  The Ruby one line command for a local HTTP server.</p>

<!--More-->


<h2>One Line Ruby HTTP Server</h2>

<p>Navigate to your local site directory and then use the following command:</p>

<figure class='code'><figcaption><span>One Line Ruby HTTP Server</span><a href='https://coderwall.com/p/ocnxeq'>Source</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="o">-</span><span class="n">run</span> <span class="o">-</span><span class="n">e</span> <span class="n">httpd</span> <span class="o">.</span> <span class="o">-</span><span class="nb">p</span> <span class="mi">8000</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can access your site at <code>http://localhost:8000</code>. If you want to change the port, modify the argument after the <code>-p</code> switch.  I confirmed that this works with Ruby v1.9.3.</p>

<h2>Ruby?</h2>

<p>Don&rsquo;t know what version of Ruby you have (or if it is installed)? Use the command <code>ruby --version</code> and you will know.</p>

<p><small><i class="icon-link"></i> Kudos <a href="https://twitter.com/dallas_reedy">Dallas Reedy</a> via <a href="https://coderwall.com/p/ocnxeq">Coderwall</a></small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Unpack a tar.gz and tar.bz2 Archive on the Command Line]]></title>
    <link href="http://sweetme.at/2013/08/28/how-to-unpack-a-tar.gz-and-tar.bz2-archive-on-the-command-line/"/>
    <updated>2013-08-28T09:00:00-04:00</updated>
    <id>http://sweetme.at/2013/08/28/how-to-unpack-a-tar.gz-and-tar.bz2-archive-on-the-command-line</id>
    <content type="html"><![CDATA[<p>No matter how many times I use these commands, I always need to look up the switches to decompress and unpack a compressed tar archive.  Here they are for those who have the same problem.</p>

<!--More-->


<h2>Decompress and Unpack a tar.gz Archive</h2>

<figure class='code'><figcaption><span>Decompress and Unpack a tar.gz Archive</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar -xvzf &lt;filename&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>Decompress and Unpack a tar.bz2 Archive</h2>

<figure class='code'><figcaption><span>Decompress and Unpack a tar.bz2 Archive</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar -xvjf &lt;filename&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>What the Switches Do</h2>

<p><code>-x</code> : extract the tar archive</p>

<p><code>-v</code> : verbose output so that you see what files are being unpacked</p>

<p><code>-f</code> : indicates that you are providing tar with an archive filename</p>

<p><code>-z</code> : runs gunzip to decompress .gz files</p>

<p><code>-j</code> : runs bunzip2 to decompress .bz2 files</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Automatically Handle PHP Arguments from Both a URL and the Command Line in the Same File]]></title>
    <link href="http://sweetme.at/2013/08/27/how-to-automatically-handle-php-arguments-from-both-a-url-and-the-command-line/"/>
    <updated>2013-08-27T19:33:00-04:00</updated>
    <id>http://sweetme.at/2013/08/27/how-to-automatically-handle-php-arguments-from-both-a-url-and-the-command-line</id>
    <content type="html"><![CDATA[<p>Want to pass arguments to your PHP script via URL on your web server as well as with standard command line syntax via the PHP interpreter?  Have your cake and eat it too with this little gem.</p>

<!--More-->


<p>I used this technique in <a href="https://github.com/chrissimpkins/tweetledee">Tweetledee</a>.  It&rsquo;s useful for testing your PHP scripts in a terminal and for piping your PHP script data to other applications.  Here is a snippet of the code from the Tweetledee favoritesjson.php file that demonstrates the conditional argument parsing logic:</p>

<figure class='code'><figcaption><span>How to Handle PHP Arguments by URL and Command Line</span><a href='https://github.com/chrissimpkins/tweetledee/blob/master/tweetledee/favoritesjson.php'>Source File</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="sd">/*******************************************************************</span>
</span><span class='line'><span class="sd">*   Parameters</span>
</span><span class='line'><span class="sd">*    - can pass via URL to web server</span>
</span><span class='line'><span class="sd">*    - or as a short or long switch at the command line</span>
</span><span class='line'><span class="sd">********************************************************************/</span>
</span><span class='line'><span class="c1">// Command line parameter definitions //</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="s1">&#39;STDIN&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$argv</span><span class="p">)){</span>
</span><span class='line'>      <span class="c1">// handle your command line arguments here with getopt</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// GET request parameter definitions //</span>
</span><span class='line'><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// handle your URL parameters (via GET or POST requests) here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>STDIN</code> is defined if the script is being run directly through the PHP interpreter with a shell command, but it is not defined when you access the file through a web server by URL.  Test to determine if it is defined and, if so, you can parse the PHP command line arguments with the PHP <a href="http://php.net/manual/en/function.getopt.php">getopt function</a>.  This allows you to pass arguments using standard short (<code>-s</code>) and long (<code>--long</code>) command line switch syntax.</p>

<p>If the test fails, then the user is accessing the file by URL.  Handle your GET and POST requests in the else code block.</p>

<p>Check out the <a href="https://github.com/chrissimpkins/tweetledee/blob/master/tweetledee/favoritesjson.php#L95">full source file</a> if you&rsquo;d like to see how I handled the arguments in these conditional statements.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Simple One-Liner to Rerun Your Last Shell Command with a Modification]]></title>
    <link href="http://sweetme.at/2013/08/26/a-simple-one-liner-to-rerun-your-last-shell-command-with-a-modification/"/>
    <updated>2013-08-26T08:31:00-04:00</updated>
    <id>http://sweetme.at/2013/08/26/a-simple-one-liner-to-rerun-your-last-shell-command-with-a-modification</id>
    <content type="html"><![CDATA[<p>This one-liner will modify an error in your last shell command and automatically re-run it.</p>

<!--More-->


<p>You meant to run <code>make &amp;&amp; make install</code> to build and install an application, but you actually typed <code>nake &amp;&amp; make install</code>.  The scenic route to correct this is UP ARROW to retrieve the command, navigate to the beginning of the line, switch the n to m, and then submit it again.</p>

<p>Here&rsquo;s your jetpack:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>^na^ma^</span></code></pre></td></tr></table></div></figure>


<p>This command uses the generic syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>^before^after^</span></code></pre></td></tr></table></div></figure>


<p>to modify the <em>before</em> substring to the <em>after</em> substring and then it automatically resubmits the command.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Files by Extension and Modification Time]]></title>
    <link href="http://sweetme.at/2013/08/23/find-files-by-extension-and-modification-time/"/>
    <updated>2013-08-23T11:23:00-04:00</updated>
    <id>http://sweetme.at/2013/08/23/find-files-by-extension-and-modification-time</id>
    <content type="html"><![CDATA[<p>I came across this file extension x file modification time search capability in linux/unix systems as I was looking into different solutions for a new software project that I am currently working on.  It&rsquo;s a simple shell one-liner.</p>

<!--More-->


<h2>The First Step : Find by File Extension</h2>

<p>The *nix <code>find</code> command allows you to use wildcards for your search in order to identify any file by its filetype.  For instance, any c source code file with a .c extension can be identified with the following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.c"</span></code></pre></td></tr></table></div></figure>


<p>The first period in the sequence indicates the path for your search (and can be replaced with any path) and the wildcard string argument for the <code>-name</code> switch specifies any filename with a .c extension.</p>

<h2>The Next Step : Find by Modification Time</h2>

<p>Now let&rsquo;s extend the command to find any file modified within a specified period of time.  The find command has a <code>-mtime</code> (modified time) switch that provides this feature.  By default, it takes arguments that are 24 hour time block multipliers.  To indicate that you want to find files with a .c extension that were modified within the last 24 hours, you use this command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.c" -mtime -1</span></code></pre></td></tr></table></div></figure>


<p>For files that were modified within the last 72 hours, use this command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.c" -mtime -3</span></code></pre></td></tr></table></div></figure>


<p>And if you need more granular control of the time, you can specify the time as the <code>-mtime</code> switch argument.  For files modified in the last 1h:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.c" -mtime -1h</span></code></pre></td></tr></table></div></figure>


<p>The command supports s (second), m (minute), h (hour), d (day), and w (week) arguments.</p>

<h2>Modify the Command for Any File Extension</h2>

<p>To change the file extension, simply change the wildcard string in the search.  Here&rsquo;s how you would find Python source files (with a .py extension) that were modified in the last hour:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.py" -mtime -1h</span></code></pre></td></tr></table></div></figure>


<p>and .png image files that were modified in the last hour:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.png" -mtime -1h</span></code></pre></td></tr></table></div></figure>


<p>and .txt files that were modified in the last hour:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -name "*.txt" -mtime -1h</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple Local HTTP Server with Python]]></title>
    <link href="http://sweetme.at/2013/08/21/simple-local-http-server-with-python/"/>
    <updated>2013-08-21T15:19:00-04:00</updated>
    <id>http://sweetme.at/2013/08/21/simple-local-http-server-with-python</id>
    <content type="html"><![CDATA[<p>This could be the most concise way to launch a local server to view files from any directory on your box.</p>

<!--More-->


<p>These Python one liners are simple and allow you to launch a local server from within any site directory on your machine.  By default it serves on port 8000 but you can modify the port by adding the port number at the end of the command.</p>

<p>Note that the command changed in Python 3.  Navigate to your site directory and run one of the following commands:</p>

<h3>Python 2.x</h3>

<figure class='code'><figcaption><span>Python 2.x Command</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">SimpleHTTPServer</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Python 3.x</h3>

<figure class='code'><figcaption><span>Python 3.x Command</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">http</span><span class="o">.</span><span class="n">server</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you use either of the default commands above, you can access your site at <code>http://localhost:8000</code>.</p>

<h2>Python?</h2>

<p>Don&rsquo;t know what version of Python you have (or if it is installed)?  Type <code>python --version</code> in your terminal and you will have the answer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Create a Draft Post with Octopress]]></title>
    <link href="http://sweetme.at/2013/08/19/how-to-create-a-draft-post-with-octopress/"/>
    <updated>2013-08-19T21:52:00-04:00</updated>
    <id>http://sweetme.at/2013/08/19/how-to-create-a-draft-post-with-octopress</id>
    <content type="html"><![CDATA[<p>Don&rsquo;t want to publish that draft post with Octopress quite yet?  Here&rsquo;s the solution.</p>

<!--More-->


<p>The YAML frontmatter for your typical post looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">layout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">post</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="s">&#39;How</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">Create</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">Draft</span><span class="nv"> </span><span class="s">Post</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">Octopress&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">date</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2013-08-19 21:52</span>
</span><span class='line'><span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Learn how to create a draft post with the Octopress blogging framework</span>
</span><span class='line'><span class="l-Scalar-Plain">keywords</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Octopress, yaml, draft, draft post, how to, tip</span>
</span><span class='line'><span class="l-Scalar-Plain">comments</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">categories</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="nn">---</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you use the command <code>rake generate</code> with these YAML settings, your static html files are generated in the directory that you use to deploy to your live site.</p>

<p>Insert <code>published: false</code> into the YAML frontmatter to make the post a draft.  Here&rsquo;s an example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">layout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">post</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="s">&#39;How</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">Create</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">Draft</span><span class="nv"> </span><span class="s">Post</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">Octopress&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">date</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2013-08-19 21:52</span>
</span><span class='line'><span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Learn how to create a draft post with the Octopress blogging framework</span>
</span><span class='line'><span class="l-Scalar-Plain">keywords</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Octopress, yaml, draft, draft post, how to, tip</span>
</span><span class='line'><span class="l-Scalar-Plain">comments</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">categories</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">published</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'><span class="nn">---</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now when you <code>rake generate</code> and <code>rake deploy</code> (or deploy manually with git or rsync), the draft post is not pushed to the server but you can still view it locally with <code>rake preview</code> (<a href="http://localhost:4000">http://localhost:4000</a>), or <a href="http://yoursitename.dev">http://yoursitename.dev</a> if you use <a href="http://pow.cx/">POW</a>, so that you can make further edits.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash backward and forward history search]]></title>
    <link href="http://sweetme.at/2013/08/16/bash-backward-and-forward-history-search/"/>
    <updated>2013-08-16T18:36:00-04:00</updated>
    <id>http://sweetme.at/2013/08/16/bash-backward-and-forward-history-search</id>
    <content type="html"><![CDATA[<p>I picked up this simple modification of the bash .inputrc file a few weeks ago and it has been a great addition to my command line armamentarium.  It allows you to perform a case-insensitive search through the bash history (forward or reverse) for anything that you type on the command line with the up and down arrows.</p>

<!--More-->


<p>If you don&rsquo;t already have a .inputrc file, create it in this path <code>~/.inputrc</code>.</p>

<p>Then, include the following script in the file:</p>

<figure class='code'><figcaption><span>.inputrc script for bash case insensitive search</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>&quot;\e[A&quot;: history-search-backward
</span><span class='line'>&quot;\e[B&quot;: history-search-forward
</span><span class='line'>set show-all-if-ambiguous on
</span><span class='line'>set completion-ignore-case on
</span></code></pre></td></tr></table></div></figure>


<p>Load your bash terminal and now you can perform a case-insensitive search for anything that you enter on the command line in a forward (with the down arrow) or reverse (with the up arrow) direction.</p>

<p>Kudos to  <a href="https://twitter.com/dotcode">Jude Robinson</a> <i class="icon-twitter"></i> who posted this on <a href="https://coderwall.com/p/oqtj8w">Coderwall</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pixsy Featured this week on Tekzilla]]></title>
    <link href="http://sweetme.at/2013/08/15/pixsy-command-line-for-internet-services/"/>
    <updated>2013-08-15T07:37:00-04:00</updated>
    <id>http://sweetme.at/2013/08/15/pixsy-command-line-for-internet-services</id>
    <content type="html"><![CDATA[<p>The <a href="http://revision3.com/tekzilla">Tekzilla crew</a> featured my application, <a href="http://pixsy.net">Pixsy</a>, on the show this week.  <a href="http://twitter.com/veronica">Veronica Belmont</a> demonstrates how to use this command line approach to access common internet services, as well as how to create your own commands for any site.  Click through for the segment.</p>

<!--More-->


<p>It starts at 20:20 in this episode:</p>

<iframe src="http://revision3.com/html5player-v23580?external=true&width=850&height=425" width="850" height="425" allowFullScreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text Keyboard Shortcut Cheat Sheet]]></title>
    <link href="http://sweetme.at/2013/08/08/sublime-text-keyboard-shortcuts/"/>
    <updated>2013-08-08T22:53:00-04:00</updated>
    <id>http://sweetme.at/2013/08/08/sublime-text-keyboard-shortcuts</id>
    <content type="html"><![CDATA[<p>Use these rapid keyboard shortcuts to control Linux, Mac OSX, and Windows versions of Sublime Text.</p>

<!--More-->


<h1>Key to the Keys</h1>

<ul>
<li>⌘ : Command key</li>
<li>⌃ : Control key</li>
<li>⌫ : Delete key</li>
<li>↓ : Down arrow key</li>
<li>⌥ : Option or Alt key</li>
<li>↩ : Return or Enter key</li>
<li>⇧ : Shift key</li>
<li>↑ : Up arrow key</li>
</ul>


<p><i class="icon-long-arrow-right"></i> : indicates that the step after the arrow should take place after the step before the arrow</p>

<h1>General</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span> </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Open Cmd Prompt</strong> </td>
<td> ⌘ + ⇧ + P </td>
<td> Ctrl + ⇧ + P </td>
<td> Ctrl + ⇧ + P</td>
</tr>
<tr>
<td></td>
<td> <strong>Toggle Side Bar</strong> </td>
<td> ⌘ + K, ⌘ + B </td>
<td> Ctrl + KB </td>
<td> Ctrl + KB</td>
</tr>
<tr>
<td></td>
<td> <strong>Show Scope (Status Bar)</strong> </td>
<td> ⌃ + ⇧ + P </td>
<td> Ctrl + ⇧ + Alt + P </td>
<td> Ctrl + ⇧ + Alt + P</td>
</tr>
</tbody>
</table>


<h1>Language</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span> </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Select File Language</strong> </td>
<td> ⌘ + ⇧ + P <i class="icon-long-arrow-right"></i> [language] </td>
<td> Ctrl + ⇧ + P <i class="icon-long-arrow-right"></i> [language] </td>
<td> Ctrl + ⇧ + P <i class="icon-long-arrow-right"></i> [language]</td>
</tr>
</tbody>
</table>


<p>Use the &ldquo;Set Syntax: [language]&rdquo; selection that is automatically populated in the command menu when you type the programming language.</p>

<h1>Editing</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span>    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Delete Line</strong> </td>
<td> ⌘ + X  </td>
<td>   Ctrl + X </td>
<td> Ctrl + X</td>
</tr>
<tr>
<td></td>
<td> <strong>Insert Line After</strong> </td>
<td> ⌘ + ↩  </td>
<td>  Ctrl + ↩  </td>
<td> Ctrl + ↩</td>
</tr>
<tr>
<td></td>
<td> <strong>Insert Line Before</strong> </td>
<td> ⌘ + ⇧ + ↩ </td>
<td> Ctrl + ⇧ + ↩ </td>
<td> Ctrl + ⇧ + ↩</td>
</tr>
<tr>
<td></td>
<td> <strong>Move Line Up</strong>  </td>
<td> ⌘ + ⌃ + ↑ </td>
<td> Ctrl + ⇧ + ↑ </td>
<td> Ctrl + ⇧ + ↑</td>
</tr>
<tr>
<td></td>
<td> <strong>Move Line Down</strong> </td>
<td> ⌘ + ⌃ + ↓ </td>
<td> Ctrl + ⇧ + ↓ </td>
<td> Ctrl + ⇧ + ↓</td>
</tr>
<tr>
<td></td>
<td> <strong>Select Line</strong> </td>
<td> ⌘ + L </td>
<td> Ctrl + L </td>
<td> Ctrl + L</td>
</tr>
<tr>
<td></td>
<td> <strong>Select Word</strong> </td>
<td> ⌘ + D </td>
<td> Ctrl + D </td>
<td> Ctrl + D</td>
</tr>
<tr>
<td></td>
<td> <strong>Jump to Closing Parenthesis</strong> </td>
<td> ⌃ + M </td>
<td> Ctrl + M </td>
<td> Ctrl + M</td>
</tr>
<tr>
<td></td>
<td> <strong>Select Contents of Current Parentheses</strong> </td>
<td> ⌃ + ⇧ + M </td>
<td> Ctrl + ⇧ + M </td>
<td> Ctrl + ⇧ + M</td>
</tr>
<tr>
<td></td>
<td> <strong>Delete from Cursor to End of Line</strong> </td>
<td> ⌘ + K,⌘ + K </td>
<td> Ctrl + KK </td>
<td> Ctrl + KK</td>
</tr>
<tr>
<td></td>
<td> <strong>Delete from Cursor to Start of Line</strong> </td>
<td> ⌘ + K + ⌫ </td>
<td> Ctrl + K + ⌫ </td>
<td> Ctrl + K + ⌫</td>
</tr>
<tr>
<td></td>
<td> <strong>Indent Current Line(s)</strong> </td>
<td> ⌘ + ] </td>
<td> Ctrl + ] </td>
<td> Ctrl + ]</td>
</tr>
<tr>
<td></td>
<td> <strong>Unindent Current Line(s)</strong> </td>
<td> ⌘ + [ </td>
<td> Ctrl + [ </td>
<td> Ctrl + [</td>
</tr>
<tr>
<td></td>
<td> <strong>Duplicate Line(s)</strong> </td>
<td> ⌘ + ⇧ + D </td>
<td> Ctrl + ⇧ + D </td>
<td> Ctrl + ⇧ + D</td>
</tr>
<tr>
<td></td>
<td> <strong>Join Line Below Current Line</strong> </td>
<td> ⌘ + J </td>
<td> Ctrl + J </td>
<td> Ctrl + J</td>
</tr>
<tr>
<td></td>
<td> <strong>Comment/Uncomment Current Line</strong> </td>
<td> ⌘ + / </td>
<td>  Ctrl + / </td>
<td>  Ctrl + /</td>
</tr>
<tr>
<td></td>
<td> <strong>Block Comment Current Selection</strong> </td>
<td> ⌘ + ⌥ + / </td>
<td> Ctrl + ⇧ + / </td>
<td> Ctrl + ⇧ + /</td>
</tr>
<tr>
<td></td>
<td> <strong>Redo/Repeat Last Keyboard Shortcut</strong> </td>
<td> ⌘ + Y </td>
<td> Ctrl + Y </td>
<td> Ctrl + Y</td>
</tr>
<tr>
<td></td>
<td> <strong>Paste with Proper Indenting</strong> </td>
<td> ⌘ + ⇧ + V </td>
<td> Ctrl + ⇧ + V </td>
<td> Ctrl + ⇧ + V</td>
</tr>
<tr>
<td></td>
<td> <strong>Select Next Autocomplete Suggestion</strong> </td>
<td> ⌃ + Space </td>
<td> Ctrl + Space </td>
<td> Ctrl + Space</td>
</tr>
<tr>
<td></td>
<td> <strong>Soft Undo</strong> </td>
<td> ⌃ + U </td>
<td> Ctrl + U </td>
<td> Ctrl + U</td>
</tr>
<tr>
<td></td>
<td> <strong>Column Selection Up</strong> </td>
<td> ⌃ + ⇧ + Up </td>
<td> Ctrl + Alt + Up </td>
<td> Alt + ⇧ + Up</td>
</tr>
<tr>
<td></td>
<td> <strong>Column Selection Down</strong> </td>
<td> ⌃ + ⇧ + Down </td>
<td> Ctrl + Alt + Down </td>
<td> Alt + ⇧ + Down</td>
</tr>
</tbody>
</table>


<h1>Transform</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span>    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>To Uppercase</strong> </td>
<td> ⌘ + K, ⌘ + U </td>
<td> Ctrl + KU </td>
<td> Ctrl + KU</td>
</tr>
<tr>
<td></td>
<td> <strong>To Lowercase</strong> </td>
<td> ⌘ + K, ⌘ + L </td>
<td> Ctrl + KL </td>
<td> Ctrl + KL</td>
</tr>
<tr>
<td></td>
<td> <strong>Increase Font Size</strong> </td>
<td> ⌘ + </td>
<td> Ctrl + </td>
<td> Ctrl +</td>
</tr>
<tr>
<td></td>
<td> <strong>Decrease Font Size</strong> </td>
<td> ⌘ &ndash; </td>
<td> Ctrl &ndash; </td>
<td> Ctrl &ndash;</td>
</tr>
</tbody>
</table>


<h1>Find &amp; Replace</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span>    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Find</strong> </td>
<td> ⌘ + F </td>
<td> Ctrl + F </td>
<td> Ctrl + F</td>
</tr>
<tr>
<td></td>
<td> <strong>Replace</strong> </td>
<td> ⌘ + ⌥ + F </td>
<td> Ctrl + H </td>
<td> Ctrl + H</td>
</tr>
<tr>
<td></td>
<td> <strong>Find in Files</strong> </td>
<td> ⌘ + ⇧ + F </td>
<td> Ctrl + ⇧ + F </td>
<td> Ctrl + ⇧ + F</td>
</tr>
<tr>
<td></td>
<td> <strong>Use Selection for Find</strong> </td>
<td> ⌘ + E </td>
<td> Ctrl + E </td>
<td> Ctrl + E</td>
</tr>
<tr>
<td></td>
<td> <strong>Use Selection for Replace</strong> </td>
<td> ⇧ + ⌘ + E </td>
<td> ⇧ + Ctrl + E </td>
<td> ⇧ + Ctrl + E</td>
</tr>
</tbody>
</table>


<h1>Navigation</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span>    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Quick Open File (by Name)</strong> </td>
<td> ⌘ + P </td>
<td> Ctrl + P </td>
<td> Ctrl + P</td>
</tr>
<tr>
<td></td>
<td> <strong>Go To Symbol</strong> </td>
<td> ⌘ + R </td>
<td> Ctrl + R </td>
<td> Ctrl + R</td>
</tr>
<tr>
<td></td>
<td> <strong>Go To Line</strong> </td>
<td> ⌃ + G </td>
<td> Ctrl + G </td>
<td> Ctrl + G</td>
</tr>
</tbody>
</table>


<h1>Code Folding</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span>    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Fold Selection</strong> </td>
<td> ⌥ + ⌘ + [ </td>
<td> ⇧ + Ctrl + [ </td>
<td> ⇧ + Ctrl + [</td>
</tr>
<tr>
<td></td>
<td> <strong>Unfold Selection</strong> </td>
<td> ⌥ + ⌘ + ] </td>
<td> ⇧ + Ctrl + ] </td>
<td> ⇧ + Ctrl + ]</td>
</tr>
<tr>
<td></td>
<td> <strong>Unfold All</strong> </td>
<td> ⌘ + K, ⌘ + J </td>
<td> Ctrl +KJ </td>
<td> Ctrl + KJ</td>
</tr>
</tbody>
</table>


<h1>Bookmarks</h1>

<table>
<thead>
<tr>
<th></th>
<th> <span style="font-size:22px;">Command</span> </th>
<th> <span style="font-size:22px;"><i class="icon-apple" align="center"></i> Mac OSX</span> </th>
<th> <span style="font-size:22px;"><i class="icon-windows"></i> Windows</span>   </th>
<th>  <span style="font-size:22px;"><i class="icon-linux"></i> Linux</span>    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> <strong>Toggle Bookmark</strong> </td>
<td> ⌘ + F2 </td>
<td> Ctrl + F2 </td>
<td> Ctrl + F2</td>
</tr>
<tr>
<td></td>
<td> <strong>Next Bookmark</strong> </td>
<td> F2 </td>
<td> F2 </td>
<td> F2</td>
</tr>
<tr>
<td></td>
<td> <strong>Previous Bookmark</strong> </td>
<td> ⇧ + F2 </td>
<td> ⇧ + F2 </td>
<td> ⇧ + F2</td>
</tr>
<tr>
<td></td>
<td> <strong>Clear Bookmarks</strong> </td>
<td> ⇧ + ⌘ + F2 </td>
<td> ⇧ + Ctrl + F2 </td>
<td> ⇧ + Ctrl + F2</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
</feed>
